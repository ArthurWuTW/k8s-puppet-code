kubectl get nodes --show-labels

#k8s-master   Ready    control-plane   47h   v1.28.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-master,kubernetes.io/os=linux,node-role.kubernetes.io/control-plane=,node.kubernetes.io/exclude-from-external-load-balancers=
#k8s-node1    Ready    <none>          46h   v1.28.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node1,kubernetes.io/os=linux
#k8s-node2    Ready    <none>          46h   v1.28.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node2,kubernetes.io/os=linux
#k8s-node3    Ready    <none>          46h   v1.28.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node3,kubernetes.io/os=linux
#k8s-node4    Ready    <none>          24h   v1.28.2   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=k8s-node4,kubernetes.io/os=linux

kubectl apply -f pod.yaml

kubectl get pods -o wide
#NAME    READY   STATUS    RESTARTS   AGE     IP           NODE        NOMINATED NODE   READINESS GATES
#nginx   1/1     Running   0          8m42s   10.244.4.2   k8s-node4   <none>           <none>

kubectl get pods
#NAME    READY   STATUS    RESTARTS        AGE
#nginx   1/1     Running   3 (7m47s ago)   21m

kubectl delete pod nginx
#pod "nginx" deleted

kubectl apply -f deployment.yaml

kubectl get deployments
#NAME               READY   UP-TO-DATE   AVAILABLE   AGE
#nginx-deployment   3/3     3            3           96s

kubectl get pods -o wide
#NAME                                READY   STATUS    RESTARTS   AGE    IP           NODE        NOMINATED NODE   READINESS GATES
#nginx-deployment-7c5ddbdf54-6xwvl   1/1     Running   0          100s   10.244.2.2   k8s-node2   <none>           <none>
#nginx-deployment-7c5ddbdf54-nt272   1/1     Running   0          100s   10.244.3.2   k8s-node3   <none>           <none>
#nginx-deployment-7c5ddbdf54-ppkmv   1/1     Running   0          100s   10.244.1.2   k8s-node1   <none>           <none>


kubectl get svc -o wide
#NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE   SELECTOR
#kubernetes      ClusterIP   10.96.0.1        <none>        443/TCP        5d    <none>
#nginx-service   NodePort    10.105.131.115   <none>        80:30036/TCP   40s   app=nginx

kubectl api-versions
#admissionregistration.k8s.io/v1
#apiextensions.k8s.io/v1
#apiregistration.k8s.io/v1
#apps/v1
#authentication.k8s.io/v1
#authorization.k8s.io/v1
#autoscaling/v1
#autoscaling/v2
#batch/v1
#certificates.k8s.io/v1
#coordination.k8s.io/v1
#discovery.k8s.io/v1
#events.k8s.io/v1
#flowcontrol.apiserver.k8s.io/v1beta2
#flowcontrol.apiserver.k8s.io/v1beta3
#node.k8s.io/v1
#networking.k8s.io/v1
#policy/v1
#rbac.authorization.k8s.io/v1
#scheduling.k8s.io/v1
#storage.k8s.io/v1
#v1

# install nginx-controller to enable ingress function
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.44.0/deploy/static/provider/cloud/deploy.yaml

# check if ingress-nginx-controller is running
kubectl get pods -n ingress-nginx -o wide
NAME                                        READY   STATUS             RESTARTS      AGE   IP           NODE        NOMINATED NODE   READINESS GATES
#ingress-nginx-admission-create-jw242        0/1     Completed          0             30m   10.244.1.4   k8s-node1   <none>           <none>
#ingress-nginx-controller-5fd49947f7-x5mjp   0/1     CrashLoopBackOff   11 (2m ago)   30m   10.244.1.6   k8s-node1   <none>           <none>

# CrashLoopBackOff trouble shooting
kubectl logs ingress-nginx-controller-5fd49947f7-x5mjp -n ingress-nginx
# E1220 14:26:33.453547       7 reflector.go:138] k8s.io/client-go@v0.20.2/tools/cache/reflector.go:167: Failed to watch *v1beta1.Ingress: failed to list *v1beta1.Ingress: the server could not find the requested resource

# upgrade ingress-nginx version
kubectl set image deployment/ingress-nginx-controller \
  controller=registry.k8s.io/ingress-nginx/controller:v1.0.5@sha256:55a1fcda5b7657c372515fe402c3e39ad93aa59f6e4378e82acd99912fe6028d \
  -n ingress-nginx

kubectl get pods -n ingress-nginx -o wide
#NAME                                        READY   STATUS      RESTARTS   AGE     IP           NODE        NOMINATED NODE   READINESS GATES
#ingress-nginx-admission-create-jw242        0/1     Completed   0          42m     10.244.1.4   k8s-node1   <none>           <none>
#ingress-nginx-controller-68b468c88f-tqlmd   1/1     Running     0          3m41s   10.244.1.8   k8s-node1   <none>           <none>

kubectl apply -f ingress.yaml
# Error from server (InternalError): error when creating "ingress.yaml": Internal error occurred: failed calling webhook "validate.nginx.ingress.kubernetes.io": failed to call webhook: Post "https://ingress-nginx-controller-admission.ingress-nginx.svc:443/networking/v1/ingresses?timeout=10s": tls: failed to verify certificate: x509: certificate signed by unknown authority

# trouble shooting
kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
#validatingwebhookconfiguration.admissionregistration.k8s.io "ingress-nginx-admission" deleted

kubectl apply -f ingress.yaml
#ingress.networking.k8s.io/nginx-ingress created
